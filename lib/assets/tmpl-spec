var fs = require('fs'),
    prettyPrint = require('${ prettyPrintFilename }').prettyPrint,
    path = require('path'),
    assert = require('assert'),
    dropRequireCache = require('enb/lib/fs/drop-require-cache'),
    HtmlDiffer = require('${ htmlDifferFilename }').HtmlDiffer,
    htmlDiffer = new HtmlDiffer({ bem: true }),
<% _.forEach(engines, function(engine) {
%>    ${ engine.varname } = require('${ engine.path }')${ engine.exportName },
<%
}); %>    referencesFilename = require.resolve('${ referencesFilename }'),
    references;

describe('${ describe }', function() {
    beforeEach(function () {
        dropRequireCache(require, referencesFilename);
        references = require(referencesFilename);
    });
    <% _.forEach(its, function(it) {
       _.forEach(engines, function(engine) {

    %>
    it('should be equal `${ it }` by ${ engine.name }', function (done) {
        var bemjson = references['${ it }'].bemjson,
            expectedHtml = references['${ it }'].html,
            actualHtml = ${ engine.varname }.apply(bemjson),
            htmlPath = path.join('${ nodeDirname }', '${ it }.${ engine.name }.html');

        if (${ saveHtml }) {
            fs.writeFile(htmlPath, prettyPrint(actualHtml), compare);
            return;
        }

        compare();

        function compare() {
            if (htmlDiffer.isEqual(expectedHtml, actualHtml)) {
                assert.ok(expectedHtml);
                done();
            } else {
                ${ saveHtml } && console.log('Result html is written to %j', htmlPath);
                assert.fail(actualHtml, expectedHtml, null, '\n');
            }
        }
    });
    <%

    });
    }); %>
});
